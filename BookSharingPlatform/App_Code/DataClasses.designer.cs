#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BookSharingPlatform")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertBlog(Blog instance);
  partial void UpdateBlog(Blog instance);
  partial void DeleteBlog(Blog instance);
  partial void InsertBlogComment(BlogComment instance);
  partial void UpdateBlogComment(BlogComment instance);
  partial void DeleteBlogComment(BlogComment instance);
  partial void InsertBook(Book instance);
  partial void UpdateBook(Book instance);
  partial void DeleteBook(Book instance);
  partial void InsertBookReview(BookReview instance);
  partial void UpdateBookReview(BookReview instance);
  partial void DeleteBookReview(BookReview instance);
  partial void InsertBookReviewComment(BookReviewComment instance);
  partial void UpdateBookReviewComment(BookReviewComment instance);
  partial void DeleteBookReviewComment(BookReviewComment instance);
  partial void InsertBookWarehouse(BookWarehouse instance);
  partial void UpdateBookWarehouse(BookWarehouse instance);
  partial void DeleteBookWarehouse(BookWarehouse instance);
  partial void InsertForum(Forum instance);
  partial void UpdateForum(Forum instance);
  partial void DeleteForum(Forum instance);
  partial void InsertLeaveMessage(LeaveMessage instance);
  partial void UpdateLeaveMessage(LeaveMessage instance);
  partial void DeleteLeaveMessage(LeaveMessage instance);
  partial void InsertLeaveMessageReply(LeaveMessageReply instance);
  partial void UpdateLeaveMessageReply(LeaveMessageReply instance);
  partial void DeleteLeaveMessageReply(LeaveMessageReply instance);
  partial void InsertLetter(Letter instance);
  partial void UpdateLetter(Letter instance);
  partial void DeleteLetter(Letter instance);
  partial void InsertNews(News instance);
  partial void UpdateNews(News instance);
  partial void DeleteNews(News instance);
  partial void InsertParticipant(Participant instance);
  partial void UpdateParticipant(Participant instance);
  partial void DeleteParticipant(Participant instance);
  partial void InsertQuanZi(QuanZi instance);
  partial void UpdateQuanZi(QuanZi instance);
  partial void DeleteQuanZi(QuanZi instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertVisitRecord(VisitRecord instance);
  partial void UpdateVisitRecord(VisitRecord instance);
  partial void DeleteVisitRecord(VisitRecord instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BookSharingPlatformConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<A> A
	{
		get
		{
			return this.GetTable<A>();
		}
	}
	
	public System.Data.Linq.Table<Blog> Blog
	{
		get
		{
			return this.GetTable<Blog>();
		}
	}
	
	public System.Data.Linq.Table<BlogComment> BlogComment
	{
		get
		{
			return this.GetTable<BlogComment>();
		}
	}
	
	public System.Data.Linq.Table<Book> Book
	{
		get
		{
			return this.GetTable<Book>();
		}
	}
	
	public System.Data.Linq.Table<BookReview> BookReview
	{
		get
		{
			return this.GetTable<BookReview>();
		}
	}
	
	public System.Data.Linq.Table<BookReviewComment> BookReviewComment
	{
		get
		{
			return this.GetTable<BookReviewComment>();
		}
	}
	
	public System.Data.Linq.Table<BookWarehouse> BookWarehouse
	{
		get
		{
			return this.GetTable<BookWarehouse>();
		}
	}
	
	public System.Data.Linq.Table<Forum> Forum
	{
		get
		{
			return this.GetTable<Forum>();
		}
	}
	
	public System.Data.Linq.Table<LeaveMessage> LeaveMessage
	{
		get
		{
			return this.GetTable<LeaveMessage>();
		}
	}
	
	public System.Data.Linq.Table<LeaveMessageReply> LeaveMessageReply
	{
		get
		{
			return this.GetTable<LeaveMessageReply>();
		}
	}
	
	public System.Data.Linq.Table<Letter> Letter
	{
		get
		{
			return this.GetTable<Letter>();
		}
	}
	
	public System.Data.Linq.Table<News> News
	{
		get
		{
			return this.GetTable<News>();
		}
	}
	
	public System.Data.Linq.Table<Participant> Participant
	{
		get
		{
			return this.GetTable<Participant>();
		}
	}
	
	public System.Data.Linq.Table<QuanZi> QuanZi
	{
		get
		{
			return this.GetTable<QuanZi>();
		}
	}
	
	public System.Data.Linq.Table<User> User
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<VisitRecord> VisitRecord
	{
		get
		{
			return this.GetTable<VisitRecord>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.A")]
public partial class A
{
	
	private string _UserID;
	
	public A()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this._UserID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog")]
public partial class Blog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _BlogID;
	
	private string _Title;
	
	private string _UserID;
	
	private System.DateTime _DateTime;
	
	private string _Content;
	
	private System.Nullable<int> _VisitNumber;
	
	private EntitySet<BlogComment> _BlogComment;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(short value);
    partial void OnBlogIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnVisitNumberChanging(System.Nullable<int> value);
    partial void OnVisitNumberChanged();
    #endregion
	
	public Blog()
	{
		this._BlogComment = new EntitySet<BlogComment>(new Action<BlogComment>(this.attach_BlogComment), new Action<BlogComment>(this.detach_BlogComment));
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short BlogID
	{
		get
		{
			return this._BlogID;
		}
		set
		{
			if ((this._BlogID != value))
			{
				this.OnBlogIDChanging(value);
				this.SendPropertyChanging();
				this._BlogID = value;
				this.SendPropertyChanged("BlogID");
				this.OnBlogIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(8000)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitNumber", DbType="Int")]
	public System.Nullable<int> VisitNumber
	{
		get
		{
			return this._VisitNumber;
		}
		set
		{
			if ((this._VisitNumber != value))
			{
				this.OnVisitNumberChanging(value);
				this.SendPropertyChanging();
				this._VisitNumber = value;
				this.SendPropertyChanged("VisitNumber");
				this.OnVisitNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_BlogComment", Storage="_BlogComment", ThisKey="BlogID", OtherKey="BlogID")]
	public EntitySet<BlogComment> BlogComment
	{
		get
		{
			return this._BlogComment;
		}
		set
		{
			this._BlogComment.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Blog", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Blog.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Blog.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BlogComment(BlogComment entity)
	{
		this.SendPropertyChanging();
		entity.Blog = this;
	}
	
	private void detach_BlogComment(BlogComment entity)
	{
		this.SendPropertyChanging();
		entity.Blog = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogComment")]
public partial class BlogComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _BlogCommentID;
	
	private short _BlogID;
	
	private string _UserID;
	
	private string _Content;
	
	private System.DateTime _DateTime;
	
	private EntityRef<Blog> _Blog;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogCommentIDChanging(short value);
    partial void OnBlogCommentIDChanged();
    partial void OnBlogIDChanging(short value);
    partial void OnBlogIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
	
	public BlogComment()
	{
		this._Blog = default(EntityRef<Blog>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogCommentID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short BlogCommentID
	{
		get
		{
			return this._BlogCommentID;
		}
		set
		{
			if ((this._BlogCommentID != value))
			{
				this.OnBlogCommentIDChanging(value);
				this.SendPropertyChanging();
				this._BlogCommentID = value;
				this.SendPropertyChanged("BlogCommentID");
				this.OnBlogCommentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", DbType="SmallInt NOT NULL")]
	public short BlogID
	{
		get
		{
			return this._BlogID;
		}
		set
		{
			if ((this._BlogID != value))
			{
				if (this._Blog.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBlogIDChanging(value);
				this.SendPropertyChanging();
				this._BlogID = value;
				this.SendPropertyChanged("BlogID");
				this.OnBlogIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(1000)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_BlogComment", Storage="_Blog", ThisKey="BlogID", OtherKey="BlogID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Blog Blog
	{
		get
		{
			return this._Blog.Entity;
		}
		set
		{
			Blog previousValue = this._Blog.Entity;
			if (((previousValue != value) 
						|| (this._Blog.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Blog.Entity = null;
					previousValue.BlogComment.Remove(this);
				}
				this._Blog.Entity = value;
				if ((value != null))
				{
					value.BlogComment.Add(this);
					this._BlogID = value.BlogID;
				}
				else
				{
					this._BlogID = default(short);
				}
				this.SendPropertyChanged("Blog");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _BookID;
	
	private string _UserID;
	
	private string _Title;
	
	private string _Author;
	
	private string _ISBN;
	
	private string _Category;
	
	private string _Publisher;
	
	private string _DoubanLink;
	
	private string _CoverImagePath;
	
	private string _SourcePath;
	
	private string _BriefIntroduction;
	
	private System.Nullable<double> _Score;
	
	private System.Nullable<int> _EvaluationNumbers;
	
	private EntitySet<BookReview> _BookReview;
	
	private EntitySet<BookWarehouse> _BookWarehouse;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(short value);
    partial void OnBookIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnDoubanLinkChanging(string value);
    partial void OnDoubanLinkChanged();
    partial void OnCoverImagePathChanging(string value);
    partial void OnCoverImagePathChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnBriefIntroductionChanging(string value);
    partial void OnBriefIntroductionChanged();
    partial void OnScoreChanging(System.Nullable<double> value);
    partial void OnScoreChanged();
    partial void OnEvaluationNumbersChanging(System.Nullable<int> value);
    partial void OnEvaluationNumbersChanged();
    #endregion
	
	public Book()
	{
		this._BookReview = new EntitySet<BookReview>(new Action<BookReview>(this.attach_BookReview), new Action<BookReview>(this.detach_BookReview));
		this._BookWarehouse = new EntitySet<BookWarehouse>(new Action<BookWarehouse>(this.attach_BookWarehouse), new Action<BookWarehouse>(this.detach_BookWarehouse));
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ISBN
	{
		get
		{
			return this._ISBN;
		}
		set
		{
			if ((this._ISBN != value))
			{
				this.OnISBNChanging(value);
				this.SendPropertyChanging();
				this._ISBN = value;
				this.SendPropertyChanged("ISBN");
				this.OnISBNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this.OnCategoryChanging(value);
				this.SendPropertyChanging();
				this._Category = value;
				this.SendPropertyChanged("Category");
				this.OnCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="VarChar(50)")]
	public string Publisher
	{
		get
		{
			return this._Publisher;
		}
		set
		{
			if ((this._Publisher != value))
			{
				this.OnPublisherChanging(value);
				this.SendPropertyChanging();
				this._Publisher = value;
				this.SendPropertyChanged("Publisher");
				this.OnPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoubanLink", DbType="VarChar(100)")]
	public string DoubanLink
	{
		get
		{
			return this._DoubanLink;
		}
		set
		{
			if ((this._DoubanLink != value))
			{
				this.OnDoubanLinkChanging(value);
				this.SendPropertyChanging();
				this._DoubanLink = value;
				this.SendPropertyChanged("DoubanLink");
				this.OnDoubanLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverImagePath", DbType="VarChar(100)")]
	public string CoverImagePath
	{
		get
		{
			return this._CoverImagePath;
		}
		set
		{
			if ((this._CoverImagePath != value))
			{
				this.OnCoverImagePathChanging(value);
				this.SendPropertyChanging();
				this._CoverImagePath = value;
				this.SendPropertyChanged("CoverImagePath");
				this.OnCoverImagePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="VarChar(100)")]
	public string SourcePath
	{
		get
		{
			return this._SourcePath;
		}
		set
		{
			if ((this._SourcePath != value))
			{
				this.OnSourcePathChanging(value);
				this.SendPropertyChanging();
				this._SourcePath = value;
				this.SendPropertyChanged("SourcePath");
				this.OnSourcePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefIntroduction", DbType="VarChar(1000)")]
	public string BriefIntroduction
	{
		get
		{
			return this._BriefIntroduction;
		}
		set
		{
			if ((this._BriefIntroduction != value))
			{
				this.OnBriefIntroductionChanging(value);
				this.SendPropertyChanging();
				this._BriefIntroduction = value;
				this.SendPropertyChanged("BriefIntroduction");
				this.OnBriefIntroductionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float")]
	public System.Nullable<double> Score
	{
		get
		{
			return this._Score;
		}
		set
		{
			if ((this._Score != value))
			{
				this.OnScoreChanging(value);
				this.SendPropertyChanging();
				this._Score = value;
				this.SendPropertyChanged("Score");
				this.OnScoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationNumbers", DbType="Int")]
	public System.Nullable<int> EvaluationNumbers
	{
		get
		{
			return this._EvaluationNumbers;
		}
		set
		{
			if ((this._EvaluationNumbers != value))
			{
				this.OnEvaluationNumbersChanging(value);
				this.SendPropertyChanging();
				this._EvaluationNumbers = value;
				this.SendPropertyChanged("EvaluationNumbers");
				this.OnEvaluationNumbersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookReview", Storage="_BookReview", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<BookReview> BookReview
	{
		get
		{
			return this._BookReview;
		}
		set
		{
			this._BookReview.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookWarehouse", Storage="_BookWarehouse", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<BookWarehouse> BookWarehouse
	{
		get
		{
			return this._BookWarehouse;
		}
		set
		{
			this._BookWarehouse.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Book", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Book.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Book.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookReview(BookReview entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_BookReview(BookReview entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_BookWarehouse(BookWarehouse entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_BookWarehouse(BookWarehouse entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookReview")]
public partial class BookReview : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _BookReviewID;
	
	private short _BookID;
	
	private string _UserID;
	
	private string _Content;
	
	private System.DateTime _DateTime;
	
	private System.Nullable<double> _Score;
	
	private System.Nullable<int> _EvaluationNumbers;
	
	private string _Title;
	
	private string _UserName;
	
	private string _BookName;
	
	private EntitySet<BookReviewComment> _BookReviewComment;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookReviewIDChanging(short value);
    partial void OnBookReviewIDChanged();
    partial void OnBookIDChanging(short value);
    partial void OnBookIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnScoreChanging(System.Nullable<double> value);
    partial void OnScoreChanged();
    partial void OnEvaluationNumbersChanging(System.Nullable<int> value);
    partial void OnEvaluationNumbersChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnBookNameChanging(string value);
    partial void OnBookNameChanged();
    #endregion
	
	public BookReview()
	{
		this._BookReviewComment = new EntitySet<BookReviewComment>(new Action<BookReviewComment>(this.attach_BookReviewComment), new Action<BookReviewComment>(this.detach_BookReviewComment));
		this._Book = default(EntityRef<Book>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookReviewID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short BookReviewID
	{
		get
		{
			return this._BookReviewID;
		}
		set
		{
			if ((this._BookReviewID != value))
			{
				this.OnBookReviewIDChanging(value);
				this.SendPropertyChanging();
				this._BookReviewID = value;
				this.SendPropertyChanged("BookReviewID");
				this.OnBookReviewIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="SmallInt NOT NULL")]
	public short BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float")]
	public System.Nullable<double> Score
	{
		get
		{
			return this._Score;
		}
		set
		{
			if ((this._Score != value))
			{
				this.OnScoreChanging(value);
				this.SendPropertyChanging();
				this._Score = value;
				this.SendPropertyChanged("Score");
				this.OnScoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationNumbers", DbType="Int")]
	public System.Nullable<int> EvaluationNumbers
	{
		get
		{
			return this._EvaluationNumbers;
		}
		set
		{
			if ((this._EvaluationNumbers != value))
			{
				this.OnEvaluationNumbersChanging(value);
				this.SendPropertyChanging();
				this._EvaluationNumbers = value;
				this.SendPropertyChanged("EvaluationNumbers");
				this.OnEvaluationNumbersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="VarChar(50)")]
	public string BookName
	{
		get
		{
			return this._BookName;
		}
		set
		{
			if ((this._BookName != value))
			{
				this.OnBookNameChanging(value);
				this.SendPropertyChanging();
				this._BookName = value;
				this.SendPropertyChanged("BookName");
				this.OnBookNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookReview_BookReviewComment", Storage="_BookReviewComment", ThisKey="BookReviewID", OtherKey="BookReviewID")]
	public EntitySet<BookReviewComment> BookReviewComment
	{
		get
		{
			return this._BookReviewComment;
		}
		set
		{
			this._BookReviewComment.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookReview", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.BookReview.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.BookReview.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(short);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookReview", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.BookReview.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.BookReview.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookReviewComment(BookReviewComment entity)
	{
		this.SendPropertyChanging();
		entity.BookReview = this;
	}
	
	private void detach_BookReviewComment(BookReviewComment entity)
	{
		this.SendPropertyChanging();
		entity.BookReview = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookReviewComment")]
public partial class BookReviewComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _BookReviewCommentID;
	
	private short _BookReviewID;
	
	private string _UserID;
	
	private string _Content;
	
	private System.DateTime _DateTime;
	
	private string _UserName;
	
	private EntityRef<BookReview> _BookReview;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookReviewCommentIDChanging(short value);
    partial void OnBookReviewCommentIDChanged();
    partial void OnBookReviewIDChanging(short value);
    partial void OnBookReviewIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
	
	public BookReviewComment()
	{
		this._BookReview = default(EntityRef<BookReview>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookReviewCommentID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short BookReviewCommentID
	{
		get
		{
			return this._BookReviewCommentID;
		}
		set
		{
			if ((this._BookReviewCommentID != value))
			{
				this.OnBookReviewCommentIDChanging(value);
				this.SendPropertyChanging();
				this._BookReviewCommentID = value;
				this.SendPropertyChanged("BookReviewCommentID");
				this.OnBookReviewCommentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookReviewID", DbType="SmallInt NOT NULL")]
	public short BookReviewID
	{
		get
		{
			return this._BookReviewID;
		}
		set
		{
			if ((this._BookReviewID != value))
			{
				if (this._BookReview.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookReviewIDChanging(value);
				this.SendPropertyChanging();
				this._BookReviewID = value;
				this.SendPropertyChanged("BookReviewID");
				this.OnBookReviewIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookReview_BookReviewComment", Storage="_BookReview", ThisKey="BookReviewID", OtherKey="BookReviewID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public BookReview BookReview
	{
		get
		{
			return this._BookReview.Entity;
		}
		set
		{
			BookReview previousValue = this._BookReview.Entity;
			if (((previousValue != value) 
						|| (this._BookReview.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookReview.Entity = null;
					previousValue.BookReviewComment.Remove(this);
				}
				this._BookReview.Entity = value;
				if ((value != null))
				{
					value.BookReviewComment.Add(this);
					this._BookReviewID = value.BookReviewID;
				}
				else
				{
					this._BookReviewID = default(short);
				}
				this.SendPropertyChanged("BookReview");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookReviewComment", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.BookReviewComment.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.BookReviewComment.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookWarehouse")]
public partial class BookWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _BookWareHouseID;
	
	private string _UserID;
	
	private System.Nullable<short> _QuanZiID;
	
	private short _BookID;
	
	private string _Type;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<QuanZi> _QuanZi;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookWareHouseIDChanging(short value);
    partial void OnBookWareHouseIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnQuanZiIDChanging(System.Nullable<short> value);
    partial void OnQuanZiIDChanged();
    partial void OnBookIDChanging(short value);
    partial void OnBookIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public BookWarehouse()
	{
		this._Book = default(EntityRef<Book>);
		this._QuanZi = default(EntityRef<QuanZi>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookWareHouseID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short BookWareHouseID
	{
		get
		{
			return this._BookWareHouseID;
		}
		set
		{
			if ((this._BookWareHouseID != value))
			{
				this.OnBookWareHouseIDChanging(value);
				this.SendPropertyChanging();
				this._BookWareHouseID = value;
				this.SendPropertyChanged("BookWareHouseID");
				this.OnBookWareHouseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanZiID", DbType="SmallInt")]
	public System.Nullable<short> QuanZiID
	{
		get
		{
			return this._QuanZiID;
		}
		set
		{
			if ((this._QuanZiID != value))
			{
				if (this._QuanZi.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnQuanZiIDChanging(value);
				this.SendPropertyChanging();
				this._QuanZiID = value;
				this.SendPropertyChanged("QuanZiID");
				this.OnQuanZiIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="SmallInt NOT NULL")]
	public short BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookWarehouse", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.BookWarehouse.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.BookWarehouse.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(short);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanZi_BookWarehouse", Storage="_QuanZi", ThisKey="QuanZiID", OtherKey="QuanZiID", IsForeignKey=true)]
	public QuanZi QuanZi
	{
		get
		{
			return this._QuanZi.Entity;
		}
		set
		{
			QuanZi previousValue = this._QuanZi.Entity;
			if (((previousValue != value) 
						|| (this._QuanZi.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._QuanZi.Entity = null;
					previousValue.BookWarehouse.Remove(this);
				}
				this._QuanZi.Entity = value;
				if ((value != null))
				{
					value.BookWarehouse.Add(this);
					this._QuanZiID = value.QuanZiID;
				}
				else
				{
					this._QuanZiID = default(Nullable<short>);
				}
				this.SendPropertyChanged("QuanZi");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookWarehouse", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.BookWarehouse.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.BookWarehouse.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum")]
public partial class Forum : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _ForumID;
	
	private string _Theme;
	
	private string _UserID;
	
	private System.DateTime _DateTime;
	
	private short _QuanZiID;
	
	private EntitySet<Participant> _Participant;
	
	private EntityRef<QuanZi> _QuanZi;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumIDChanging(short value);
    partial void OnForumIDChanged();
    partial void OnThemeChanging(string value);
    partial void OnThemeChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnQuanZiIDChanging(short value);
    partial void OnQuanZiIDChanged();
    #endregion
	
	public Forum()
	{
		this._Participant = new EntitySet<Participant>(new Action<Participant>(this.attach_Participant), new Action<Participant>(this.detach_Participant));
		this._QuanZi = default(EntityRef<QuanZi>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short ForumID
	{
		get
		{
			return this._ForumID;
		}
		set
		{
			if ((this._ForumID != value))
			{
				this.OnForumIDChanging(value);
				this.SendPropertyChanging();
				this._ForumID = value;
				this.SendPropertyChanged("ForumID");
				this.OnForumIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theme", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Theme
	{
		get
		{
			return this._Theme;
		}
		set
		{
			if ((this._Theme != value))
			{
				this.OnThemeChanging(value);
				this.SendPropertyChanging();
				this._Theme = value;
				this.SendPropertyChanged("Theme");
				this.OnThemeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanZiID", DbType="SmallInt NOT NULL")]
	public short QuanZiID
	{
		get
		{
			return this._QuanZiID;
		}
		set
		{
			if ((this._QuanZiID != value))
			{
				if (this._QuanZi.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnQuanZiIDChanging(value);
				this.SendPropertyChanging();
				this._QuanZiID = value;
				this.SendPropertyChanged("QuanZiID");
				this.OnQuanZiIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_Participant", Storage="_Participant", ThisKey="ForumID", OtherKey="ForumID")]
	public EntitySet<Participant> Participant
	{
		get
		{
			return this._Participant;
		}
		set
		{
			this._Participant.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanZi_Forum", Storage="_QuanZi", ThisKey="QuanZiID", OtherKey="QuanZiID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public QuanZi QuanZi
	{
		get
		{
			return this._QuanZi.Entity;
		}
		set
		{
			QuanZi previousValue = this._QuanZi.Entity;
			if (((previousValue != value) 
						|| (this._QuanZi.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._QuanZi.Entity = null;
					previousValue.Forum.Remove(this);
				}
				this._QuanZi.Entity = value;
				if ((value != null))
				{
					value.Forum.Add(this);
					this._QuanZiID = value.QuanZiID;
				}
				else
				{
					this._QuanZiID = default(short);
				}
				this.SendPropertyChanged("QuanZi");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Forum", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Forum.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Forum.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Participant(Participant entity)
	{
		this.SendPropertyChanging();
		entity.Forum = this;
	}
	
	private void detach_Participant(Participant entity)
	{
		this.SendPropertyChanging();
		entity.Forum = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveMessage")]
public partial class LeaveMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _LeaveMessageID;
	
	private string _UserID;
	
	private string _HostID;
	
	private string _Content;
	
	private System.DateTime _DateTime;
	
	private EntitySet<LeaveMessageReply> _LeaveMessageReply;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveMessageIDChanging(short value);
    partial void OnLeaveMessageIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnHostIDChanging(string value);
    partial void OnHostIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
	
	public LeaveMessage()
	{
		this._LeaveMessageReply = new EntitySet<LeaveMessageReply>(new Action<LeaveMessageReply>(this.attach_LeaveMessageReply), new Action<LeaveMessageReply>(this.detach_LeaveMessageReply));
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveMessageID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short LeaveMessageID
	{
		get
		{
			return this._LeaveMessageID;
		}
		set
		{
			if ((this._LeaveMessageID != value))
			{
				this.OnLeaveMessageIDChanging(value);
				this.SendPropertyChanging();
				this._LeaveMessageID = value;
				this.SendPropertyChanged("LeaveMessageID");
				this.OnLeaveMessageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string HostID
	{
		get
		{
			return this._HostID;
		}
		set
		{
			if ((this._HostID != value))
			{
				this.OnHostIDChanging(value);
				this.SendPropertyChanging();
				this._HostID = value;
				this.SendPropertyChanged("HostID");
				this.OnHostIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(300)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveMessage_LeaveMessageReply", Storage="_LeaveMessageReply", ThisKey="LeaveMessageID", OtherKey="LeaveMessageID")]
	public EntitySet<LeaveMessageReply> LeaveMessageReply
	{
		get
		{
			return this._LeaveMessageReply;
		}
		set
		{
			this._LeaveMessageReply.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaveMessage", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.LeaveMessage.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.LeaveMessage.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LeaveMessageReply(LeaveMessageReply entity)
	{
		this.SendPropertyChanging();
		entity.LeaveMessage = this;
	}
	
	private void detach_LeaveMessageReply(LeaveMessageReply entity)
	{
		this.SendPropertyChanging();
		entity.LeaveMessage = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveMessageReply")]
public partial class LeaveMessageReply : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _LeaveMessageReplyID;
	
	private short _LeaveMessageID;
	
	private string _UserID;
	
	private string _Content;
	
	private System.DateTime _DateTime;
	
	private EntityRef<LeaveMessage> _LeaveMessage;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveMessageReplyIDChanging(short value);
    partial void OnLeaveMessageReplyIDChanged();
    partial void OnLeaveMessageIDChanging(short value);
    partial void OnLeaveMessageIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
	
	public LeaveMessageReply()
	{
		this._LeaveMessage = default(EntityRef<LeaveMessage>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveMessageReplyID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short LeaveMessageReplyID
	{
		get
		{
			return this._LeaveMessageReplyID;
		}
		set
		{
			if ((this._LeaveMessageReplyID != value))
			{
				this.OnLeaveMessageReplyIDChanging(value);
				this.SendPropertyChanging();
				this._LeaveMessageReplyID = value;
				this.SendPropertyChanged("LeaveMessageReplyID");
				this.OnLeaveMessageReplyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveMessageID", DbType="SmallInt NOT NULL")]
	public short LeaveMessageID
	{
		get
		{
			return this._LeaveMessageID;
		}
		set
		{
			if ((this._LeaveMessageID != value))
			{
				if (this._LeaveMessage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLeaveMessageIDChanging(value);
				this.SendPropertyChanging();
				this._LeaveMessageID = value;
				this.SendPropertyChanged("LeaveMessageID");
				this.OnLeaveMessageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(300)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveMessage_LeaveMessageReply", Storage="_LeaveMessage", ThisKey="LeaveMessageID", OtherKey="LeaveMessageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public LeaveMessage LeaveMessage
	{
		get
		{
			return this._LeaveMessage.Entity;
		}
		set
		{
			LeaveMessage previousValue = this._LeaveMessage.Entity;
			if (((previousValue != value) 
						|| (this._LeaveMessage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LeaveMessage.Entity = null;
					previousValue.LeaveMessageReply.Remove(this);
				}
				this._LeaveMessage.Entity = value;
				if ((value != null))
				{
					value.LeaveMessageReply.Add(this);
					this._LeaveMessageID = value.LeaveMessageID;
				}
				else
				{
					this._LeaveMessageID = default(short);
				}
				this.SendPropertyChanged("LeaveMessage");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaveMessageReply", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.LeaveMessageReply.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.LeaveMessageReply.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Letter")]
public partial class Letter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _LetterID;
	
	private string _UserID;
	
	private string _Title;
	
	private string _HyperLink;
	
	private System.DateTime _DateTime;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLetterIDChanging(short value);
    partial void OnLetterIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHyperLinkChanging(string value);
    partial void OnHyperLinkChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
	
	public Letter()
	{
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short LetterID
	{
		get
		{
			return this._LetterID;
		}
		set
		{
			if ((this._LetterID != value))
			{
				this.OnLetterIDChanging(value);
				this.SendPropertyChanging();
				this._LetterID = value;
				this.SendPropertyChanged("LetterID");
				this.OnLetterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HyperLink", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string HyperLink
	{
		get
		{
			return this._HyperLink;
		}
		set
		{
			if ((this._HyperLink != value))
			{
				this.OnHyperLinkChanging(value);
				this.SendPropertyChanging();
				this._HyperLink = value;
				this.SendPropertyChanged("HyperLink");
				this.OnHyperLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Letter", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Letter.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Letter.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _NewsID;
	
	private System.Nullable<short> _QuanZiID;
	
	private string _Title;
	
	private string _UserID;
	
	private System.DateTime _DateTime;
	
	private string _HyperLink;
	
	private EntityRef<QuanZi> _QuanZi;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(short value);
    partial void OnNewsIDChanged();
    partial void OnQuanZiIDChanging(System.Nullable<short> value);
    partial void OnQuanZiIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnHyperLinkChanging(string value);
    partial void OnHyperLinkChanged();
    #endregion
	
	public News()
	{
		this._QuanZi = default(EntityRef<QuanZi>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short NewsID
	{
		get
		{
			return this._NewsID;
		}
		set
		{
			if ((this._NewsID != value))
			{
				this.OnNewsIDChanging(value);
				this.SendPropertyChanging();
				this._NewsID = value;
				this.SendPropertyChanged("NewsID");
				this.OnNewsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanZiID", DbType="SmallInt")]
	public System.Nullable<short> QuanZiID
	{
		get
		{
			return this._QuanZiID;
		}
		set
		{
			if ((this._QuanZiID != value))
			{
				if (this._QuanZi.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnQuanZiIDChanging(value);
				this.SendPropertyChanging();
				this._QuanZiID = value;
				this.SendPropertyChanged("QuanZiID");
				this.OnQuanZiIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HyperLink", DbType="VarChar(200)")]
	public string HyperLink
	{
		get
		{
			return this._HyperLink;
		}
		set
		{
			if ((this._HyperLink != value))
			{
				this.OnHyperLinkChanging(value);
				this.SendPropertyChanging();
				this._HyperLink = value;
				this.SendPropertyChanged("HyperLink");
				this.OnHyperLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanZi_News", Storage="_QuanZi", ThisKey="QuanZiID", OtherKey="QuanZiID", IsForeignKey=true, DeleteRule="CASCADE")]
	public QuanZi QuanZi
	{
		get
		{
			return this._QuanZi.Entity;
		}
		set
		{
			QuanZi previousValue = this._QuanZi.Entity;
			if (((previousValue != value) 
						|| (this._QuanZi.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._QuanZi.Entity = null;
					previousValue.News.Remove(this);
				}
				this._QuanZi.Entity = value;
				if ((value != null))
				{
					value.News.Add(this);
					this._QuanZiID = value.QuanZiID;
				}
				else
				{
					this._QuanZiID = default(Nullable<short>);
				}
				this.SendPropertyChanged("QuanZi");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_News", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.News.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.News.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participant")]
public partial class Participant : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ParticipantID;
	
	private short _ForumID;
	
	private string _UserID;
	
	private System.DateTime _DateTime;
	
	private string _Content;
	
	private EntityRef<Forum> _Forum;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParticipantIDChanging(int value);
    partial void OnParticipantIDChanged();
    partial void OnForumIDChanging(short value);
    partial void OnForumIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
	
	public Participant()
	{
		this._Forum = default(EntityRef<Forum>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ParticipantID
	{
		get
		{
			return this._ParticipantID;
		}
		set
		{
			if ((this._ParticipantID != value))
			{
				this.OnParticipantIDChanging(value);
				this.SendPropertyChanging();
				this._ParticipantID = value;
				this.SendPropertyChanged("ParticipantID");
				this.OnParticipantIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="SmallInt NOT NULL")]
	public short ForumID
	{
		get
		{
			return this._ForumID;
		}
		set
		{
			if ((this._ForumID != value))
			{
				if (this._Forum.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnForumIDChanging(value);
				this.SendPropertyChanging();
				this._ForumID = value;
				this.SendPropertyChanged("ForumID");
				this.OnForumIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_Participant", Storage="_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Forum Forum
	{
		get
		{
			return this._Forum.Entity;
		}
		set
		{
			Forum previousValue = this._Forum.Entity;
			if (((previousValue != value) 
						|| (this._Forum.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Forum.Entity = null;
					previousValue.Participant.Remove(this);
				}
				this._Forum.Entity = value;
				if ((value != null))
				{
					value.Participant.Add(this);
					this._ForumID = value.ForumID;
				}
				else
				{
					this._ForumID = default(short);
				}
				this.SendPropertyChanged("Forum");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Participant", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Participant.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Participant.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanZi")]
public partial class QuanZi : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _QuanZiID;
	
	private string _UserID;
	
	private System.DateTime _DateTime;
	
	private string _QuanZiName;
	
	private string _CreatorCourse;
	
	private string _CreatorTel;
	
	private string _CreatorAddress;
	
	private EntitySet<BookWarehouse> _BookWarehouse;
	
	private EntitySet<Forum> _Forum;
	
	private EntitySet<News> _News;
	
	private EntityRef<User> _User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuanZiIDChanging(short value);
    partial void OnQuanZiIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnQuanZiNameChanging(string value);
    partial void OnQuanZiNameChanged();
    partial void OnCreatorCourseChanging(string value);
    partial void OnCreatorCourseChanged();
    partial void OnCreatorTelChanging(string value);
    partial void OnCreatorTelChanged();
    partial void OnCreatorAddressChanging(string value);
    partial void OnCreatorAddressChanged();
    #endregion
	
	public QuanZi()
	{
		this._BookWarehouse = new EntitySet<BookWarehouse>(new Action<BookWarehouse>(this.attach_BookWarehouse), new Action<BookWarehouse>(this.detach_BookWarehouse));
		this._Forum = new EntitySet<Forum>(new Action<Forum>(this.attach_Forum), new Action<Forum>(this.detach_Forum));
		this._News = new EntitySet<News>(new Action<News>(this.attach_News), new Action<News>(this.detach_News));
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanZiID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short QuanZiID
	{
		get
		{
			return this._QuanZiID;
		}
		set
		{
			if ((this._QuanZiID != value))
			{
				this.OnQuanZiIDChanging(value);
				this.SendPropertyChanging();
				this._QuanZiID = value;
				this.SendPropertyChanged("QuanZiID");
				this.OnQuanZiIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
	public System.DateTime DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanZiName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string QuanZiName
	{
		get
		{
			return this._QuanZiName;
		}
		set
		{
			if ((this._QuanZiName != value))
			{
				this.OnQuanZiNameChanging(value);
				this.SendPropertyChanging();
				this._QuanZiName = value;
				this.SendPropertyChanged("QuanZiName");
				this.OnQuanZiNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorCourse", DbType="VarChar(50)")]
	public string CreatorCourse
	{
		get
		{
			return this._CreatorCourse;
		}
		set
		{
			if ((this._CreatorCourse != value))
			{
				this.OnCreatorCourseChanging(value);
				this.SendPropertyChanging();
				this._CreatorCourse = value;
				this.SendPropertyChanged("CreatorCourse");
				this.OnCreatorCourseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorTel", DbType="VarChar(50)")]
	public string CreatorTel
	{
		get
		{
			return this._CreatorTel;
		}
		set
		{
			if ((this._CreatorTel != value))
			{
				this.OnCreatorTelChanging(value);
				this.SendPropertyChanging();
				this._CreatorTel = value;
				this.SendPropertyChanged("CreatorTel");
				this.OnCreatorTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorAddress", DbType="VarChar(50)")]
	public string CreatorAddress
	{
		get
		{
			return this._CreatorAddress;
		}
		set
		{
			if ((this._CreatorAddress != value))
			{
				this.OnCreatorAddressChanging(value);
				this.SendPropertyChanging();
				this._CreatorAddress = value;
				this.SendPropertyChanged("CreatorAddress");
				this.OnCreatorAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanZi_BookWarehouse", Storage="_BookWarehouse", ThisKey="QuanZiID", OtherKey="QuanZiID")]
	public EntitySet<BookWarehouse> BookWarehouse
	{
		get
		{
			return this._BookWarehouse;
		}
		set
		{
			this._BookWarehouse.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanZi_Forum", Storage="_Forum", ThisKey="QuanZiID", OtherKey="QuanZiID")]
	public EntitySet<Forum> Forum
	{
		get
		{
			return this._Forum;
		}
		set
		{
			this._Forum.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanZi_News", Storage="_News", ThisKey="QuanZiID", OtherKey="QuanZiID")]
	public EntitySet<News> News
	{
		get
		{
			return this._News;
		}
		set
		{
			this._News.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_QuanZi", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.QuanZi.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.QuanZi.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookWarehouse(BookWarehouse entity)
	{
		this.SendPropertyChanging();
		entity.QuanZi = this;
	}
	
	private void detach_BookWarehouse(BookWarehouse entity)
	{
		this.SendPropertyChanging();
		entity.QuanZi = null;
	}
	
	private void attach_Forum(Forum entity)
	{
		this.SendPropertyChanging();
		entity.QuanZi = this;
	}
	
	private void detach_Forum(Forum entity)
	{
		this.SendPropertyChanging();
		entity.QuanZi = null;
	}
	
	private void attach_News(News entity)
	{
		this.SendPropertyChanging();
		entity.QuanZi = this;
	}
	
	private void detach_News(News entity)
	{
		this.SendPropertyChanging();
		entity.QuanZi = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserID;
	
	private string _Password;
	
	private string _Name;
	
	private string _Sex;
	
	private string _UserImagePath;
	
	private string _Birthday;
	
	private string _Email;
	
	private string _BriefIntroduction;
	
	private string _Identity;
	
	private System.Nullable<short> _QuanZiID;
	
	private string _Signature;
	
	private string _SecurityQ;
	
	private string _SecurityA;
	
	private string _FavBookCate;
	
	private string _Grade;
	
	private EntitySet<Blog> _Blog;
	
	private EntitySet<Book> _Book;
	
	private EntitySet<BookReview> _BookReview;
	
	private EntitySet<BookReviewComment> _BookReviewComment;
	
	private EntitySet<BookWarehouse> _BookWarehouse;
	
	private EntitySet<Forum> _Forum;
	
	private EntitySet<LeaveMessage> _LeaveMessage;
	
	private EntitySet<LeaveMessageReply> _LeaveMessageReply;
	
	private EntitySet<Letter> _Letter;
	
	private EntitySet<News> _News;
	
	private EntitySet<Participant> _Participant;
	
	private EntitySet<QuanZi> _QuanZi;
	
	private EntitySet<VisitRecord> _VisitRecord;
	
	private EntitySet<VisitRecord> _VisitRecord1;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnUserImagePathChanging(string value);
    partial void OnUserImagePathChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBriefIntroductionChanging(string value);
    partial void OnBriefIntroductionChanged();
    partial void OnIdentityChanging(string value);
    partial void OnIdentityChanged();
    partial void OnQuanZiIDChanging(System.Nullable<short> value);
    partial void OnQuanZiIDChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnSecurityQChanging(string value);
    partial void OnSecurityQChanged();
    partial void OnSecurityAChanging(string value);
    partial void OnSecurityAChanged();
    partial void OnFavBookCateChanging(string value);
    partial void OnFavBookCateChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    #endregion
	
	public User()
	{
		this._Blog = new EntitySet<Blog>(new Action<Blog>(this.attach_Blog), new Action<Blog>(this.detach_Blog));
		this._Book = new EntitySet<Book>(new Action<Book>(this.attach_Book), new Action<Book>(this.detach_Book));
		this._BookReview = new EntitySet<BookReview>(new Action<BookReview>(this.attach_BookReview), new Action<BookReview>(this.detach_BookReview));
		this._BookReviewComment = new EntitySet<BookReviewComment>(new Action<BookReviewComment>(this.attach_BookReviewComment), new Action<BookReviewComment>(this.detach_BookReviewComment));
		this._BookWarehouse = new EntitySet<BookWarehouse>(new Action<BookWarehouse>(this.attach_BookWarehouse), new Action<BookWarehouse>(this.detach_BookWarehouse));
		this._Forum = new EntitySet<Forum>(new Action<Forum>(this.attach_Forum), new Action<Forum>(this.detach_Forum));
		this._LeaveMessage = new EntitySet<LeaveMessage>(new Action<LeaveMessage>(this.attach_LeaveMessage), new Action<LeaveMessage>(this.detach_LeaveMessage));
		this._LeaveMessageReply = new EntitySet<LeaveMessageReply>(new Action<LeaveMessageReply>(this.attach_LeaveMessageReply), new Action<LeaveMessageReply>(this.detach_LeaveMessageReply));
		this._Letter = new EntitySet<Letter>(new Action<Letter>(this.attach_Letter), new Action<Letter>(this.detach_Letter));
		this._News = new EntitySet<News>(new Action<News>(this.attach_News), new Action<News>(this.detach_News));
		this._Participant = new EntitySet<Participant>(new Action<Participant>(this.attach_Participant), new Action<Participant>(this.detach_Participant));
		this._QuanZi = new EntitySet<QuanZi>(new Action<QuanZi>(this.attach_QuanZi), new Action<QuanZi>(this.detach_QuanZi));
		this._VisitRecord = new EntitySet<VisitRecord>(new Action<VisitRecord>(this.attach_VisitRecord), new Action<VisitRecord>(this.detach_VisitRecord));
		this._VisitRecord1 = new EntitySet<VisitRecord>(new Action<VisitRecord>(this.attach_VisitRecord1), new Action<VisitRecord>(this.detach_VisitRecord1));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NChar(2)")]
	public string Sex
	{
		get
		{
			return this._Sex;
		}
		set
		{
			if ((this._Sex != value))
			{
				this.OnSexChanging(value);
				this.SendPropertyChanging();
				this._Sex = value;
				this.SendPropertyChanged("Sex");
				this.OnSexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImagePath", DbType="VarChar(100)")]
	public string UserImagePath
	{
		get
		{
			return this._UserImagePath;
		}
		set
		{
			if ((this._UserImagePath != value))
			{
				this.OnUserImagePathChanging(value);
				this.SendPropertyChanging();
				this._UserImagePath = value;
				this.SendPropertyChanged("UserImagePath");
				this.OnUserImagePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(50)")]
	public string Birthday
	{
		get
		{
			return this._Birthday;
		}
		set
		{
			if ((this._Birthday != value))
			{
				this.OnBirthdayChanging(value);
				this.SendPropertyChanging();
				this._Birthday = value;
				this.SendPropertyChanged("Birthday");
				this.OnBirthdayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefIntroduction", DbType="VarChar(500)")]
	public string BriefIntroduction
	{
		get
		{
			return this._BriefIntroduction;
		}
		set
		{
			if ((this._BriefIntroduction != value))
			{
				this.OnBriefIntroductionChanging(value);
				this.SendPropertyChanging();
				this._BriefIntroduction = value;
				this.SendPropertyChanged("BriefIntroduction");
				this.OnBriefIntroductionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Identity
	{
		get
		{
			return this._Identity;
		}
		set
		{
			if ((this._Identity != value))
			{
				this.OnIdentityChanging(value);
				this.SendPropertyChanging();
				this._Identity = value;
				this.SendPropertyChanged("Identity");
				this.OnIdentityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanZiID", DbType="SmallInt")]
	public System.Nullable<short> QuanZiID
	{
		get
		{
			return this._QuanZiID;
		}
		set
		{
			if ((this._QuanZiID != value))
			{
				this.OnQuanZiIDChanging(value);
				this.SendPropertyChanging();
				this._QuanZiID = value;
				this.SendPropertyChanged("QuanZiID");
				this.OnQuanZiIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="VarChar(300)")]
	public string Signature
	{
		get
		{
			return this._Signature;
		}
		set
		{
			if ((this._Signature != value))
			{
				this.OnSignatureChanging(value);
				this.SendPropertyChanging();
				this._Signature = value;
				this.SendPropertyChanged("Signature");
				this.OnSignatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityQ", DbType="VarChar(50)")]
	public string SecurityQ
	{
		get
		{
			return this._SecurityQ;
		}
		set
		{
			if ((this._SecurityQ != value))
			{
				this.OnSecurityQChanging(value);
				this.SendPropertyChanging();
				this._SecurityQ = value;
				this.SendPropertyChanged("SecurityQ");
				this.OnSecurityQChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityA", DbType="VarChar(50)")]
	public string SecurityA
	{
		get
		{
			return this._SecurityA;
		}
		set
		{
			if ((this._SecurityA != value))
			{
				this.OnSecurityAChanging(value);
				this.SendPropertyChanging();
				this._SecurityA = value;
				this.SendPropertyChanged("SecurityA");
				this.OnSecurityAChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavBookCate", DbType="VarChar(50)")]
	public string FavBookCate
	{
		get
		{
			return this._FavBookCate;
		}
		set
		{
			if ((this._FavBookCate != value))
			{
				this.OnFavBookCateChanging(value);
				this.SendPropertyChanging();
				this._FavBookCate = value;
				this.SendPropertyChanged("FavBookCate");
				this.OnFavBookCateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50)")]
	public string Grade
	{
		get
		{
			return this._Grade;
		}
		set
		{
			if ((this._Grade != value))
			{
				this.OnGradeChanging(value);
				this.SendPropertyChanging();
				this._Grade = value;
				this.SendPropertyChanged("Grade");
				this.OnGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Blog", Storage="_Blog", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Blog> Blog
	{
		get
		{
			return this._Blog;
		}
		set
		{
			this._Blog.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Book", Storage="_Book", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Book> Book
	{
		get
		{
			return this._Book;
		}
		set
		{
			this._Book.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookReview", Storage="_BookReview", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<BookReview> BookReview
	{
		get
		{
			return this._BookReview;
		}
		set
		{
			this._BookReview.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookReviewComment", Storage="_BookReviewComment", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<BookReviewComment> BookReviewComment
	{
		get
		{
			return this._BookReviewComment;
		}
		set
		{
			this._BookReviewComment.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookWarehouse", Storage="_BookWarehouse", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<BookWarehouse> BookWarehouse
	{
		get
		{
			return this._BookWarehouse;
		}
		set
		{
			this._BookWarehouse.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Forum", Storage="_Forum", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Forum> Forum
	{
		get
		{
			return this._Forum;
		}
		set
		{
			this._Forum.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaveMessage", Storage="_LeaveMessage", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<LeaveMessage> LeaveMessage
	{
		get
		{
			return this._LeaveMessage;
		}
		set
		{
			this._LeaveMessage.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaveMessageReply", Storage="_LeaveMessageReply", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<LeaveMessageReply> LeaveMessageReply
	{
		get
		{
			return this._LeaveMessageReply;
		}
		set
		{
			this._LeaveMessageReply.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Letter", Storage="_Letter", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Letter> Letter
	{
		get
		{
			return this._Letter;
		}
		set
		{
			this._Letter.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_News", Storage="_News", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<News> News
	{
		get
		{
			return this._News;
		}
		set
		{
			this._News.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Participant", Storage="_Participant", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Participant> Participant
	{
		get
		{
			return this._Participant;
		}
		set
		{
			this._Participant.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_QuanZi", Storage="_QuanZi", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<QuanZi> QuanZi
	{
		get
		{
			return this._QuanZi;
		}
		set
		{
			this._QuanZi.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VisitRecord", Storage="_VisitRecord", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<VisitRecord> VisitRecord
	{
		get
		{
			return this._VisitRecord;
		}
		set
		{
			this._VisitRecord.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VisitRecord1", Storage="_VisitRecord1", ThisKey="UserID", OtherKey="HostID")]
	public EntitySet<VisitRecord> VisitRecord1
	{
		get
		{
			return this._VisitRecord1;
		}
		set
		{
			this._VisitRecord1.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Blog(Blog entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Blog(Blog entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Book(Book entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Book(Book entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_BookReview(BookReview entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_BookReview(BookReview entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_BookReviewComment(BookReviewComment entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_BookReviewComment(BookReviewComment entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_BookWarehouse(BookWarehouse entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_BookWarehouse(BookWarehouse entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Forum(Forum entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Forum(Forum entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_LeaveMessage(LeaveMessage entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_LeaveMessage(LeaveMessage entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_LeaveMessageReply(LeaveMessageReply entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_LeaveMessageReply(LeaveMessageReply entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Letter(Letter entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Letter(Letter entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_News(News entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_News(News entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Participant(Participant entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Participant(Participant entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_QuanZi(QuanZi entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_QuanZi(QuanZi entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_VisitRecord(VisitRecord entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_VisitRecord(VisitRecord entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_VisitRecord1(VisitRecord entity)
	{
		this.SendPropertyChanging();
		entity.User1 = this;
	}
	
	private void detach_VisitRecord1(VisitRecord entity)
	{
		this.SendPropertyChanging();
		entity.User1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitRecord")]
public partial class VisitRecord : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _VisitID;
	
	private string _UserID;
	
	private string _HostID;
	
	private System.DateTime _Date;
	
	private EntityRef<User> _User;
	
	private EntityRef<User> _User1;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIDChanging(short value);
    partial void OnVisitIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnHostIDChanging(string value);
    partial void OnHostIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
	
	public VisitRecord()
	{
		this._User = default(EntityRef<User>);
		this._User1 = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short VisitID
	{
		get
		{
			return this._VisitID;
		}
		set
		{
			if ((this._VisitID != value))
			{
				this.OnVisitIDChanging(value);
				this.SendPropertyChanging();
				this._VisitID = value;
				this.SendPropertyChanged("VisitID");
				this.OnVisitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string HostID
	{
		get
		{
			return this._HostID;
		}
		set
		{
			if ((this._HostID != value))
			{
				if (this._User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnHostIDChanging(value);
				this.SendPropertyChanging();
				this._HostID = value;
				this.SendPropertyChanged("HostID");
				this.OnHostIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
	public System.DateTime Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VisitRecord", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.VisitRecord.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.VisitRecord.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(string);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VisitRecord1", Storage="_User1", ThisKey="HostID", OtherKey="UserID", IsForeignKey=true)]
	public User User1
	{
		get
		{
			return this._User1.Entity;
		}
		set
		{
			User previousValue = this._User1.Entity;
			if (((previousValue != value) 
						|| (this._User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User1.Entity = null;
					previousValue.VisitRecord1.Remove(this);
				}
				this._User1.Entity = value;
				if ((value != null))
				{
					value.VisitRecord1.Add(this);
					this._HostID = value.UserID;
				}
				else
				{
					this._HostID = default(string);
				}
				this.SendPropertyChanged("User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
